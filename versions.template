<head>
    <script src="jquery.min.3.6.2.js"></script>
    <link href="bootstrap.min.css" rel="stylesheet">
    <script src="bootstrap.bundle.min.js"></script>
    <script type="text/javascript">
    $(function(){
        var updatedtime = $("#time").text();
        updatedtime = updatedtime.slice(updatedtime.indexOf(":") + 1).trim();
        var now = new Date();
        buildNo = 0;
        var lasttime = new Date(updatedtime);
        var gap = (now - lasttime)/(1000 * 3600);
        job_url = "{{job_url}}";
        formData = new FormData();
        formData.append("name","username");
        formData.append("value","{{username}}");
        formData.append("name","servers");
        formData.append("value","{{servers}}");
        formData.append("name","skips");
        formData.append("value","{{skips}}");
        formData.append("name","password");
        formData.append("value","<DEFAULT>");
        formData.append("name","confluence");
        formData.append("value","<DEFAULT>");
        formData.append("name","converts");
        formData.append("value","{{converts}}");
        formData.append("name","source");
        formData.append("value","{{source}}");

        jsonData = {{jsonData|safe}};


        var crumbUrl = location.origin + "/crumbIssuer/api/json";
        getlastversion();
        $.ajax({type:"GET",url:crumbUrl, success:setCrumb});
        formData.append("statusCode","303");
        formData.append("redirectTo",".");
        formData.append("Submit","Build");

        if (gap < 3){
            $("#version").css("background-color","green");
        }else{
            if (gap < 24){
                $("#version").css("background-color","yellow");
            }else{
                $("#version").css("background-color","red");
            }
        }
        $("#loading").hide();
    });
    function setCrumb(data){
        jenkins_crumb = data["crumb"];
        jsonData["Jenksin-Crumb"] = data["crumb"];
        formData.append("Jenkins-Crumb",data["crumb"]);
        formData.append("json",JSON.stringify(jsonData));
    }
    function getlastversion(){
        $.ajax({type:"GET",url:job_url+"/api/json",success:processData})
    }
    function processData(data,status,jqXHR){
        var lastBuild = data.lastBuild.number;
        successBuild = data.lastSuccessfulBuild.number;
        if (buildNo < lastBuild){
            buildNo = lastBuild;
        }
        if (buildNo > successBuild){
            $("#loading").show();
            $("#showversion").hide();
            setTimeout(getlastversion,1000);
        }else{
            $("#loading").hide();
            $("#showversion").show();
            if (buildNo == 0){
                buildNo = successBuild;
            }else{
                location.reload();
            }
        }
    }
    function buildjob(){
        var build_url = "{{job_url}}/buildWithParameters?token={{token}}";
        $.ajax({
                type:"GET",
                url:build_url,
                headers:{"Access-Control-Allow-Origin":"*"},
                success:function(data){
                    buildNo++;
                    $("#loading").show();
                    $("#showversion").hide();
                    setTimeout(getlastversion,5000);
                },
                error:function(err){
                    console.log(err);
                }
                })

    }
    </script>

</head>
<body>

    <H1>Component Versions in QA Environments</H1>
    <div id="loading"><H3>Processing...</H3></div>
    <div id="showversion">
    <button id="version" onclick="buildjob()" class="btn btn-primary" style="color:black">Get The Latest Version</button>
    <div>
    <b id="time">last updated: {{updatetime}}</b>
    </div>
    </div>
    <Table border="1" style="width:100%">
    <tbody style="border-width=1">
    <TR>
    {% for field in components%}
           <th>{{field}}</th>
        {% endfor %}
    </TR>
         {% for envir in versions %}
         <TR >
         {% for component in components %}
              <TD style="background-color:{{envir|get_item:component|get_item:'color'}}" >{{envir|get_item:component|get_item:'value'}}</TD>
         {%endfor%}
         </TR>
         {% endfor %}
    </tbody>
    </Table>
    <b>References:</b>
    <ul>
    {% for ref in references %}
        <li><a href='{{ref}}'>{{ref}}</a></li>
    {% endfor %}
    </ul>
</body>